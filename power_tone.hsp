;Power Tone Script using hsp3
;	hspda.dll header
;
#packopt name "Power Tone"
#packopt hide 1

#cmpopt varname 1

#uselib "data/hspda.dll"
#func sortval sortval $202
#func sortstr sortstr $202
#func sortnote sortnote $202
#func sortget sortget $202
#func sortbye sortbye $100

#func csvstr csvstr $202
#func csvnote csvnote $87

#func xnotesel xnotesel $202
#func xnoteadd xnoteadd $202

#func rndf_ini rndf_ini $202
#func rndf_get rndf_get $202
#func rndf_geti rndf_geti $202

#func csvsel csvsel 1
#func csvres csvres $83
#func csvflag csvflag 0
#func csvopt csvopt 0
#func csvfind csvfind 6

#define CCSV_OPT_NOCASE 1
#define CCSV_OPT_ANDMATCH 2
#define CCSV_OPT_ZENKAKU 4
#define CCSV_OPT_ADDLINE 8
#define CCSV_OPT_EXPRESSION 128

#func getvarid getvarid $202
#func getvarname getvarname $202
#func getmaxvar getmaxvar $202
#func vsave vsave $202
#func vload vload $202
#func vsave_start vsave_start $202
#func vsave_put vsave_put $202
#func vsave_end vsave_end $202
#func vload_start vload_start $202
#func vload_get vload_get $202
#func vload_end vload_end $202


 #uselib	"data/dsoundex.hpi"

#define	C_EOT		0x00
#define	C_NOTE		0x01
#define	C_PROGCHG	0x02
#define	C_PITCHBEND	0x03
#define	C_PAN		0x04
#define	C_PEDAL		0x05
#define	C_SETVOICE	0x06
#define	C_VOL		0x07
#define	C_EXP		0x08
#define	C_TEMPO		0x10
#define	C_SYNC		0xff

#func	ds_getdev	ds_getdev	$11
#func	ds_setdev	ds_setdev	$0

#func	ds_init	ds_init	$22
#func	ds_load	ds_load	$6
#func	ds_load2	ds_load2	$1
#func	ds_memload	ds_memload	$1
#func	ds_create	ds_create	$0
#func	ds_write	ds_write	$1
#func	ds_play	ds_play	$0
#func	ds_loop	ds_loop	$0
#func	ds_stop	ds_stop	$0
#func	ds_getf	ds_getf	$0
#func	ds_setf	ds_setf	$0
#func	ds_getp	ds_getp	$0
#func	ds_setp	ds_setp	$0
#func	ds_stat	ds_stat	$0
#func	ds_vol	ds_vol	$0
#func	ds_pan	ds_pan	$0
#func	ds_dup	ds_dup	$0
#func	ds_rel	ds_rel	$0
#func	ds_bye	ds_bye	$0
#func	ds_free	ds_free	$100
#func	timer	timer	$0

#func	seq_read	seq_read	$1
#func	seq_play	seq_play	$0
#func	seq_stat	seq_stat	$0
#func	seq_isplay	seq_isplay	$0
#func	seq_stop	seq_stop	$0
#func	seq_bye	seq_bye	$100

#ifndef d3setcam
#module "d3m"
#define global ctype d3dist(%1,%2=0,%3=0)  sqrt((%1) * (%1) + (%2) * (%2) + (%3) * (%3))
#deffunc d3rotate var x1, var y1, double x0, double y0, double va
	x1 = x0 * cos(va) - y0 * sin(va)
	y1 = x0 * sin(va) + y0 * cos(va)
	return
#deffunc d3vrotate var x1, var y1, var z1,  double x0, double y0, double z0,  double vx, double vy, double vz,  double va
	r = d3dist(vx, vy, vz)
	ax = vx/r : ay = vy/r : az = vz/r
	sin1   = sin(va)
	cos1   = cos(va)
	l_cos1 = 1.0 - cos1
	x1 = (ax*ax*l_cos1+cos1)*x0 + (ax*ay*l_cos1-az*sin1)*y0 + (az*ax*l_cos1+ay*sin1)*z0
	y1 = (ax*ay*l_cos1+az*sin1)*x0 + (ay*ay*l_cos1+cos1)*y0 + (ay*az*l_cos1-ax*sin1)*z0
	z1 = (az*ax*l_cos1-ay*sin1)*x0 + (ay*az*l_cos1+ax*sin1)*y0 + (az*az*l_cos1+cos1)*z0
	return
#define global d3wincx wincx@d3m
#define global d3wincy wincy@d3m
#deffunc d3setlocalmx double LGmpx, double LGmpy, double LGmpz,  double LGm00, double LGm10, double LGm20,  double LGm01, double LGm11, double LGm21,  double LGm02, double LGm12, double LGm22
	LGSm00 = GSm00*LGm00 + GSm10*LGm01 ;+ GSm20*LGm02 // GSm20 == 0
	LGSm10 = GSm00*LGm10 + GSm10*LGm11 ;+ GSm20*LGm12
	LGSm20 = GSm00*LGm20 + GSm10*LGm21 ;+ GSm20*LGm22
	LGSmpx = GSm00*LGmpx + GSm10*LGmpy + GSmpx ;+ GSm20*LGmpz
	LGSm01 = GSm01*LGm00 + GSm11*LGm01 + GSm21*LGm02
	LGSm11 = GSm01*LGm10 + GSm11*LGm11 + GSm21*LGm12
	LGSm21 = GSm01*LGm20 + GSm11*LGm21 + GSm21*LGm22
	LGSmpy = GSm01*LGmpx + GSm11*LGmpy + GSm21*LGmpz + GSmpy
	LGSm02 = GSm02*LGm00 + GSm12*LGm01 + GSm22*LGm02
	LGSm12 = GSm02*LGm10 + GSm12*LGm11 + GSm22*LGm12
	LGSm22 = GSm02*LGm20 + GSm12*LGm21 + GSm22*LGm22
	LGSmpz = GSm02*LGmpx + GSm12*LGmpy + GSm22*LGmpz + GSmpz
	return
#deffunc d3setcamx double cpx, double cpy, double cpz,  double ppx, double ppy, double ppz, double ppv
	mref df, 64
	wincx = ginfo_winx / 2
	wincy = ginfo_winy / 2
	ax = cpx - ppx
	ay = cpy - ppy
	az = cpz - ppz
	r0 = sqrt(ax*ax + ay*ay)
	r1 = sqrt(r0*r0 + az*az)
	if r0 ! 0.0 {
		cos0 = -ax / r0
		sin0 = -ay / r0
	}
	if r1 ! 0.0 {
		cos1 = r0 / r1
		sin1 = az / r1
	}
	az = ppv / (0.01 + ginfo_winy) ; ����p
	GSm00 = sin0         : GSm10 = -cos0       ; : GSm20 =  0.0
	GSm01 = cos0*cos1*az : GSm11 =  sin0*cos1*az : GSm21 = -sin1*az
	GSm02 = cos0*sin1    : GSm12 =  sin0*sin1    : GSm22 =  cos1
	GSmpx = -(GSm00*cpx + GSm10*cpy)
	GSmpy = -(GSm01*cpx + GSm11*cpy + GSm21*cpz)
	GSmpz = -(GSm02*cpx + GSm12*cpy + GSm22*cpz)
	d3setlocalmx 0,0,0, 1,0,0, 0,1,0, 0,0,1
	return
#define global d3setcam(%1=0, %2=0, %3=0, %4=0, %5=0, %6=0, %7=1)  d3setcamx %1, %2, %3, %4, %5, %6, %7
#define global d3setlocal(%1=0,%2=0,%3=0, %4=1,%5=0,%6=0, %7=0,%8=1,%9=0, %10=0,%11=0,%12=1)  d3setlocalmx %1,%2,%3, %4,%5,%6, %7,%8,%9, %10,%11,%12
#define d3trans(%1, %2, %3,  %4=dx, %5=dy, %6=dz, %7=df) \
\
	%6 = (LGSm01*%1 + LGSm11*%2 + LGSm21*%3 + LGSmpy) : \
	%7 = 0 : \
\
	if %6 > 0 { \
		%4 = wincx + (LGSm00*%1 + LGSm10*%2 + LGSm20*%3 + LGSmpx) / %6 : \
		%5 = wincy - (LGSm02*%1 + LGSm12*%2 + LGSm22*%3 + LGSmpz) / %6 : \
		%7 = (%4/8000 | %5/8000) = 0 \
	}
#deffunc d3vpos  double v01, double v02, double v03
	ex = dx
	ey = dy
	ef = df
	d3trans v01, v02, v03
	return
#define global d3getpos(%1, %2, %3=0, %4=0, %5=0)  d3vpos %3, %4, %5 : if df@d3m { %1 = dx@d3m : %2 = dy@d3m }
#define global d3pos(%1=0, %2=0, %3=0)  d3vpos %1, %2, %3 : if df@d3m { pos dx@d3m, dy@d3m }
#define global d3initlineto  df@d3m = 0
#define global d3pset(%1=0, %2=0, %3=0)  d3vpos %1, %2, %3 : if df@d3m { pset dx@d3m, dy@d3m }
#define global d3lineto(%1=0,%2=0,%3=0)  d3vpos %1, %2, %3 : if df@d3m & ef@d3m { line dx@d3m, dy@d3m, ex@d3m, ey@d3m }
#deffunc d3line double ppx, double ppy, double ppz,  double ssx, double ssy, double ssz
	d3vpos ssx, ssy, ssz ; , ex, ey, ez, ef
	d3vpos ppx, ppy, ppz ; , dx, dy, dz, df
	; �N���b�v�s�v
	if df & ef {
		line dx, dy, ex, ey
		return
	}
	if df | ef {
		if df {
			pos dx, dy
			ax = ppx : ay = ppy : az = ppz
			bx = ssx : by = ssy : bz = ssz
		} else {
			pos ex, ey
			ax = ssx : ay = ssy : az = ssz
			bx = ppx : by = ppy : bz = ppz
		}
		repeat 10
			cx = (ax + bx) / 2
			cy = (ay + by) / 2
			cz = (az + bz) / 2
			d3trans cx, cy, cz,  ex, ey, ez, af
			if af {
				ax = cx : ay = cy : az = cz
				line ex, ey
			} else {
				bx = cx : by = cy : bz = cz
			}
		loop
	}
	return
#deffunc d3arrow double v11, double v12, double v13,  double v14, double v15, double v16
	d3line v11, v12, v13,  v14, v15, v16
	if df & ef {
		a = atan(dy-ey, dx-ex)
		d3vpos (v11*6+v14)/7, (v12*6+v15)/7, (v13*6+v16)/7
		r = d3dist(v11-v14, v12-v15, v13-v16) / dz / 25
		bx = cos(a) * r
		by = sin(a) * r
		line ex, ey,  dx - by, dy + bx
		line ex, ey,  dx + by, dy - bx
	}
	return
#deffunc d3box double v11, double v12, double v13,  double v14, double v15, double v16
	d3line v11, v12, v13,  v11, v12, v16
	d3line v11, v12, v16,  v11, v15, v16
	d3line v11, v15, v16,  v11, v15, v13
	d3line v11, v15, v13,  v11, v12, v13
	d3line v14, v12, v13,  v14, v15, v13
	d3line v14, v15, v13,  v14, v15, v16
	d3line v14, v15, v16,  v14, v12, v16
	d3line v14, v12, v16,  v14, v12, v13
	d3line v11, v12, v13,  v14, v12, v13
	d3line v11, v12, v16,  v14, v12, v16
	d3line v11, v15, v16,  v14, v15, v16
	d3line v11, v15, v13,  v14, v15, v13
	return
#deffunc d3circle double ppx, double ppy, double ppz, double ppr, int ppf
	d3vpos ppx, ppy, ppz
	if df {
		r = ppr / dz
		if r >= 1 {
			circle dx-r, dy-r, dx+(r+0.5), dy+(r+0.5), ppf
		} else {
			pset dx, dy
		}
	}
	return
#deffunc d3mes str pmsg, double ppx, double ppy, double ppz
	d3vpos ppx, ppy, ppz
	if df {
		pos 0, -32000
		mes pmsg
		pos dx - ginfo_mesx/2, dy - ginfo_mesy/2
		mes pmsg
	}
	return
#const	PCACHE_D	18				; �k���L���b�V�� �ő咼�a
#const	PTS_D		(PCACHE_D + 1) * PCACHE_D / 2	; �p�[�e�B�N���o�b�t�@ ���a
#const	PTS_DM1		(PTS_D - 1)			;  PTS_D - 1
#const	TMP_R		PTS_D				; �p�[�e�B�N���摜�쐬�X�N���[�� ���a
#const	TMP_D		TMP_R * 2			;  �� ���a // ��d3mkparticle �̉掿/���x�o�����X�ɑ���
#define global d3mkparticle(%1=0, %2=0, %3=0, %4=0, %5=ptcdef@d3m)  d3createptc %1, %2, %3, %4, %5
#define global d3ldparticle(%1=0, %2=0, %3=0, %4=0, %5=1, %6=1)  tmp@d3m = %5 : d3createptc %1, %2, %3, %4, tmp@d3m, %6
#deffunc d3createptc int ppi, int v02, int v03, int v04, array v05, int v06
	b = ginfo_sel
	x = PTS_D * ppi
	if ppi >= ppi_max {
		a = ppi + 4 ; �g����� ppi_max (�ő� pid)
		if SCR_TMP = 29 {
			SCR_TMP = 27
			SCR_PTC = 29
		} else {
			SCR_TMP = 29
			SCR_PTC = 27
		}
		buffer SCR_PTC, PTS_D * a, PTS_D + PCACHE_D
		if ppi_max : gcopy SCR_TMP, 0, 0, PTS_D * ppi_max, PTS_D + PCACHE_D
		buffer SCR_TMP, TMP_D, TMP_D
		ppi_max = a
	}
	if v06 {
		gsel SCR_PTC
		pos x, 0
		gzoom PTS_D, PTS_D, v02, v03, v04, v05, v06, 1
	} else {
		gsel SCR_TMP
		color : boxf
		#define pseq v05
		polys = pseq * pseq(1)
		n = TMP_R * polys
		repeat n
			f = (1.0 + cnt) / n		; linear
			f = (f * f + f) / 2		; blend
			color limit(f * v02, 0, 255), limit(f * v03, 0, 255), limit(f * v04, 0, 255)
			f = 6.2831853 * cnt / polys
			r = TMP_R * (n - cnt) * pseq(cnt\pseq(1)+2) / 100 / n
			line TMP_R + sin(f)*r, TMP_R - cos(f)*r
		loop
		pos 0, 0 : gmode 2, TMP_D, TMP_D : gcopy SCR_TMP, 1
		gsel SCR_PTC
		pos x, 0
		gzoom PTS_D, PTS_D,  SCR_TMP,  0, 0,  TMP_D, TMP_D,  1
	}
	repeat PCACHE_D, 1
		pos (cnt-1)*cnt/2 + x, PTS_D
		gzoom cnt, cnt,  SCR_PTC,  x, 0,  PTS_D, PTS_D,  1
		gmode 3, , , 56
		pos cnt*cnt/2 + x, PTS_D + cnt/2
		gcopy SCR_PTC, PTS_D/2 + x, PTS_D/2, 1, 1
	loop
	pfy = 0, 0, PTS_DM1, PTS_DM1
	gsel b
	return
#define global d3particle(%1=0,%2=0,%3=0,%4=0,%5=0)  d3vpos %2, %3, %4 : d3particlem %1, %5
#deffunc d3particlem int ppi, double ppr
	if df {
		d = int(ppr * 2 / dz)
		if d >= 1 {
			if d <= PCACHE_D {
				pos dx - d/2, dy - d/2
				gcopy SCR_PTC,  ppi*PTS_D + (d-1)*d/2, PTS_D,  d, d
			} else {
				r = d / 2
				pdx = dx - r, dx + r, dx + r, pdx
				pdy = dy - r, pdy, dy + r, dy + r
				x = ppi*PTS_D
				psx = x, x+PTS_DM1, x+PTS_DM1, x
				gsquare SCR_PTC, pdx, pdy, psx, pfy
			}
		}
	}
	return
#define global d3particler(%1=0,%2=0,%3=0,%4=0,%5=0,%6=0)  d3vpos %2, %3, %4 : d3particlemr %1, %5, %6
#deffunc d3particlemr int ppi, double ppr, double ppa
	if df {
		r = ppr / dz * 1.41421356
		if r >= 1 {
			c = cos(ppa - 0.78539816) * r
			s = sin(ppa - 0.78539816) * r
			pdx = dx + s, dx + c, dx - s, dx - c
			pdy = dy - c, dy + s, dy + c, dy - s
			x = ppi*PTS_D
			psx = x, x+PTS_DM1, x+PTS_DM1, x
			gsquare SCR_PTC, pdx, pdy, psx, pfy
		}
	}
	return
#deffunc d3square array aryx, array aryy, array aryz
	repeat 4
		vx = aryx(cnt)
		vy = aryy(cnt)
		vz = aryz(cnt)
		d3trans  vx, vy, vz
		if df = 0 : break
		pdx(cnt) = dx
		pdy(cnt) = dy
	loop
	if df : gsquare -1, pdx, pdy
	return
#deffunc d3ribbonto double x1, double y1, double z1, double x2, double y2, double z2
	pdx = dx, ex
	pdy = dy, ey
	a = ef & df ; �O��`��t���O
	d3vpos x1, y1, z1 ; -> ef
	d3vpos x2, y2, z2 ; -> df
	if a & ef & df {
		pdx(2) = ex, dx
		pdy(2) = ey, dy
		gsquare -1, pdx, pdy
	}
	return
#deffunc d3texture array aryx, array aryy, array aryz, int ppi, int ppx, int ppy, int ppw, int pph, int div
	if div <= 1 {
		repeat 4
			vx = aryx(cnt)
			vy = aryy(cnt)
			vz = aryz(cnt)
			d3trans  vx, vy, vz
			if df = 0 : break ; ���W�ϊ��͈͊O
			pdx(cnt) = dx
			pdy(cnt) = dy
		loop
		if df {
			psx = ppx, ppx+ppw-1, ppx+ppw-1, ppx
			psy = ppy, ppy,       ppy+pph-1, ppy+pph-1
			gsquare ppi, pdx, pdy, psx, psy
		}
		return
	}
	pc = div + 1	; ��ӂ̓_�̐�(point count)
	fc = div * div	; ���������ʂ̐�(face count)
	repeat pc * pc
		x = cnt\pc
		y = cnt/pc
		f0 = (div-x) * (div-y)
		f1 = x * (div-y)
		f2 = x * y
		f3 = (div-x) * y
		vx = (aryx(0)*f0 + aryx(1)*f1 + aryx(2)*f2 + aryx(3)*f3) / fc
		vy = (aryy(0)*f0 + aryy(1)*f1 + aryy(2)*f2 + aryy(3)*f3) / fc
		vz = (aryz(0)*f0 + aryz(1)*f1 + aryz(2)*f2 + aryz(3)*f3) / fc
		d3trans vx, vy, vz,  tvx(cnt), tvy(cnt), dz,  tvf(cnt)
	loop
	pw = ppw - 1
	ph = pph - 1
	repeat div
		y = cnt
		psy = y*ph/div + ppy, psy(0), (y+1)*ph/div + ppy, psy(2)
		repeat div
			x = cnt
			p0 = y * pc + x
			p1 = p0 + 1
			p2 = p1 + pc
			p3 = p0 + pc
			if tvf(p0) & tvf(p1) & tvf(p2) & tvf(p3) {
				pdx = tvx(p0), tvx(p1), tvx(p2), tvx(p3)
				pdy = tvy(p0), tvy(p1), tvy(p2), tvy(p3)
				psx = x*pw/div + ppx, (x+1)*pw/div + ppx, psx(1), psx(0)
				gsquare ppi, pdx, pdy, psx, psy
			}
		loop
	loop
	return
#ifdef _HSP3DISH
#defcfunc d3timer
	getreq _timevalue,SYSREQ_TIMER
	return _timevalue
#else
#uselib "winmm.dll"
#cfunc global d3timer "timeGetTime"
#endif
#defcfunc d3getfps
	a = d3timer() / 200
	fpss(a&31)++
	if bktp ! a {
		bktp = a
		cfps = 0
		repeat 5, 1
			cfps += fpss((a-cnt)&31)
		loop
		repeat 20, 1
			fpss((a+cnt)&31) = 0
		loop
	}
	return cfps
#global
	dim fpss@d3m, 32
	ptcdef@d3m = 20, 1, 100
#endif
 
 
	;���C���E�B���h�E
	scx01 = 800
	scy01 = 500
	scid01 = 0
	scmode01 = 0
	
	fps01 = 30.
	fps02 = 1000/fps01
		msecond = 0
	fps03 = 0
	frame_count = 0
	
	fon = "MS�S�V�b�N"
	
	fas =0.85
	#define system_name "power tone"
	#define version "v1.0"
	screen scid01,scx01,scy01,scmode01,ginfo_dispx/2-(scx01/2),-4.*(ginfo_dispy/2-(scy01/2))
	title "" + system_name + " "+version
	scywin = 2.*(ginfo_dispy/2.-(scy01/2.))
	getfps =0
	repeat
	redraw 0
	color 0,0,50 :boxf
	getfps= 1.*d3getfps()
	width ,,ginfo_dispx/2-(scx01/2),((ginfo_dispy/2-(scy01/2))-scywin)
	scywin*=fas
	redraw 1
	if scywin<1 :break
	await 1000/60
	loop
	;onerror goto*error
	cls 4
	ds_init
	
	dim uifuwa ,10
	
	uifuwa(0) = 1.* scx01/2
	uifuwa(1) =50.
	flag = 0
	fobi=250.
	
	buffer 6,scx01,scy01
	buffer 7
	color 255,255,255 : boxf
	buffer 8,scx01,scy01
	color 255,255,255 : boxf
	buffer 12,scx01,scy01
	color 0,0,255:boxf
	buffer 13,scx01,scy01
	color 255,255,255 : boxf
	buffer 14,scx01,scy01
	color 0,0,255 : boxf
	buffer 9
	shadow = 18.
	repeat ;�ŏ��̃Z�b�e�B���O
	flag += 1
	if flag > 2 : fobi*=fas
	if flag > 0{ 
	gsel scid01
	redraw 0
	color 0,0,50 : boxf
	getfps= 1.*d3getfps()
	uifuwa(0)*=fas*0.8
	pos (scx01/2)-uifuwa(0),-scy01
	font fon,18,1
	color 255,255,255
	mes "welcome to "+system_name+"..."
		pos (scx01/2)-uifuwa(0)-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)+shadow
	font fon,18,1
	color 100,100,100
	mes "welcome to "+system_name+"..."
	pos (scx01/2)-uifuwa(0)-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)
	font fon,18,1
	color 255,255,255
	mes "welcome to "+system_name+"..."
	redraw 1
	}
	if flag>20:break
	await fps02
	loop
	uifuw=0
	plus = 0.
	uifuwa(3)= 45.
	uifuwa(4)= 44.
	uifuwa(5)= 47.
	uifuwa(6)= 53.
	uifuwa(7)= 52.
	
	repeat
	if cnt>2 : uifuwa(3)*=fas*0.8 : plus+=uifuwa(3)
	if cnt>8 : uifuwa(4)*=fas*0.8 : plus+=uifuwa(4)
	if cnt>18 : uifuwa(5)*=fas*0.8 : plus+=uifuwa(5)
	if cnt>22 : uifuwa(6)*=fas*0.8 : plus+=uifuwa(6)
	if cnt>33 : uifuwa(7)*=fas*0.8 : plus+=uifuwa(7)
	redraw 0
	color 0,0,50 : boxf
		pos (scx01/2)-uifuwa(0),-scy01
	font fon,18,1
	color 255,255,255
	mes "welcome to "+system_name+"..."
	uifuwa(1)*=fas
	
		pos (scx01/2)-uifuwa(0)-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)-(50.-uifuwa(1))+(shadow+1.)
	font fon,18,1
	color 100,100,100
	shadow*=fas
	mes "welcome to "+system_name+"..."
	pos (scx01/2)-uifuwa(0)-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)-(50.-uifuwa(1))
	font fon,18,1
	color 255,255,255
	mes "welcome to "+system_name+"..."
	color uifuw,uifuw,uifuw
	uifuw+=5
	if uifuw>240 : uifuw = 240
	boxf scx01/4,scy01/2,scx01-(scx01/4),scy01/2+20
	color 0,0,50
		boxf scx01/4+2,scy01/2+2,scx01-(scx01/4)-2,scy01/2+18
		color 255,255,255
	boxf scx01/4+2,scy01/2+2,scx01/4+plus,scy01/2+18
	if plus>401 : break
	redraw 1
	await fps02
	loop
			goto*news
*clss2
	making = "new music"
	title ""+system_name+" "+version+" -"+making+"-"
	
	sd =int(sd2)+4
	dim part1,sd,40,50
	dim viv1,sd,40,50
	dim vol1,sd,40,50
	dim long1,sd,40,50
	dim vol2,sd,40,50
	dim pl,sd,40,50
	
	dim partbs,50
	dim partnam,50
	repeat 50
	partnam(cnt) = "part"+(cnt+1)
	loop
		selected = 1
		part(0)=1
		tempo = 60.
        
		max_stpart = 28;28
		max2_stpart = 0
		dim file,50
		repeat 50
		file(cnt) = ""
		loop
			parth = 1
			partpos =0
				dam = "1"
				cflags = 0
				stpart = 0
*clss

	partpos1 =0.0
	partcflag =0
	pointx = 0
	pointy = 0
	
	nvol = 0
	nviv = 0
	nlong = 0
	npl = 0
	
	Fkp_bf = double(gettime(7))
	Fkpa = double(gettime(7))
	
	;�Đ�
	pflag = 0
	ptime = 1
	ptflag1 = 0
	ptflag = 0
	dim lons,sd,40,50
	dim last,40,50
	redraw 0
	clrobj
	
	gsel scid01
	color 0,0,50 : boxf
	color 0,255,0 : line 120,0,120,scy01
	color 0,255,0 : line 140,0,140,scy01
	
	buffer 4,1000,500
	color 0,0,0 :boxf
	repeat 40
	
	color 0,255,0
	if cnt=0:color 255,0,0
	if cnt=1:color 255,0,0
	if cnt=12:color 255,0,0
	if cnt=13:color 255,0,0
	if cnt=24:color 255,0,0
	if cnt=25:color 255,0,0
	if cnt=36:color 255,0,0
	if cnt=37:color 255,0,0
	line 0,cnt*10,1000,cnt*10
	loop
	
	repeat 28
	
	color 0,150,0
	if cnt=0 | cnt=4 |cnt=8 | cnt=12 | cnt=16 | cnt=20 | cnt=24 | cnt=28 | cnt=32 | cnt=36 | cnt=40 | cnt=44 | cnt=48 | cnt=52 |cnt=56: color 150,0,0
	line cnt*20,0,cnt*20,390
	loop
	gsel scid01
	
	pos 150,60
	gmode 2
	gcopy 4,,,1000,371

	pos 123,61
	color 100,0,0 : font fon,10,16
	mes "C3" : mes "CS3" : mes "D3" : mes "DS3"
	mes "E3" : mes "F3" : mes "FS3" : mes "G3"
	mes "GS3" : mes "A3" : mes "AS3" : mes "B3"
	mes "C4"
	mes "CS4" : mes "D4" : mes "DS4"
	mes "E4" : mes "F4" : mes "FS4" : mes "G4"
	mes "GS4" : mes "A4" : mes "AS4" : mes "B4"
	mes "C5" 
	mes "CS5" : mes "D5" : mes "DS5"
	mes "E5" : mes "F5" : mes "FS5" : mes "G5"
	mes "GS5" : mes "A5" : mes "AS5" : mes "B5"
	mes "C6"
	pos 122,60
	color 255,0,0 : font fon,10,16
	mes "C3" : mes "CS3" : mes "D3" : mes "DS3"
	mes "E3" : mes "F3" : mes "FS3" : mes "G3"
	mes "GS3" : mes "A3" : mes "AS3" : mes "B3"
	mes "C4"
	mes "CS4" : mes "D4" : mes "DS4"
	mes "E4" : mes "F4" : mes "FS4" : mes "G4"
	mes "GS4" : mes "A4" : mes "AS4" : mes "B4"
	mes "C5" 
	mes "CS5" : mes "D5" : mes "DS5"
	mes "E5" : mes "F5" : mes "FS5" : mes "G5"
	mes "GS5" : mes "A5" : mes "AS5" : mes "B5"
	mes "C6"
	color 0,255,0 : line 200,435,310,435 : line 200,435,200,490 : line 200,490,310,490 : line 310,435,310,490
	line 300,435,580,435 : line 300,435,300,490 : line 300,490,580,490 : line 580,435,580,490
	line 140,28,scx01,28
	pos 155,9
	font fon,12,0
	color 255,255,255
	mes "part name :"
	buffer 5,1000,scy01
	pos 0,0
	gmode 0
	gcopy 0,120,0,scx01-120,scy01
	gsel scid01
			pos 210,470
	objsize 20,12
	button gosub "��",*left01
	pos 270,470
	objsize 20,12
	button gosub "��",*right01
	pos 10,50
	objsize 100,25
	button gosub"file",*files
	pos 10,120
	input tempo,100,20
		pos scx01-80,scy01-30
	objsize 15,15
	button gosub"��",*up
	pos scx01-30,scy01-30
	objsize 15,15
	button gosub"��",*down
	
		pos 8,scy01-60
	objsize 60,20
	button gosub"put(enter)",*put
		pos 46,scy01-30
	objsize 60,20
	button gosub"del(shift)",*del
	
		pos 12,225
	objsize 40,20
	button gosub"-",*vivleft
		pos 62,225
	objsize 40,20
	button gosub"+",*vivright
			pos 12,275
	objsize 40,20
	button gosub"-",*volleft
		pos 62,275
	objsize 40,20
	button gosub"+",*volright
			pos 12,325
	objsize 40,20
	button gosub"-",*longleft
		pos 62,325
	objsize 40,20
	button gosub"+",*longright
	
				pos 12,375
	objsize 40,20
	button gosub"-",*plleft
		pos 62,375
	objsize 40,20
	button gosub"+",*plright
	
	pos 410,450
	objsize 40,30
	button gosub"play",*play
	pos 460,450
	objsize 40,30
	button gosub"stop",*stops
	pos 510,450
	objsize 40,30
	button gosub"pause",*pause
	
	pos 595,438
	objsize 60,15
	button gosub "new",*new1
	pos 610,455
	objsize 60,15
	button gosub "load",*load
	pos 625,472
	objsize 60,15
	button gosub "save",*save
	pos 220,7
	input partnam(selected-1),80,16
		buffer 7,scx01,scy01
	color 0,0,0 :boxf
	color 255,0,0
		repeat 30,1
	pos cnt*20,0
	color 255,0,0 : font fon,8,16
	mes cnt+stpart
	loop
	
	gsel scid01
	textflag = 0
	redraw 1
	repeat
	ptflag = 0
	ptflag1 = temt
		getfps= 1.*d3getfps()
		gsel scid01
		scr = 01
		onclick gosub *clicked
		redraw 0
		color 0,25,0 : boxf
	pos 120,0
	gmode 0
	gcopy 5,,,scx01-120,scy01
	
	color 0,255,0 : line 0,155,120,155
	
	pos 10,10
	color 255,255,255
	font fon,10,0
	mes "part : "+ pfp
	mes :  mes "sound file" : mes : mes
	if file(selected-1)="":mes : mes : mes "there's not file."
	if file(selected-1)!"":mes : mes : mes "there's <.wav> file."
	mes : mes "tempo:" : mes : mes : mes : mes : mes : mes
	if pointx=0:mes "pointed (- : -)"
	if pointx!0:mes "pointed ("+pointx+" : "+pointy+")"
	mes : mes
	mes "Vivrate (0-100)"
	if pointx=0:mes "(-)"
	if pointx!0:mes "("+viv1(pointx-1,pointy-1,selected-1)+")"
	mes : mes : mes
	mes "Volume (0-200)"
		if pointx=0:mes "(-)"
	if pointx!0:mes "("+vol1(pointx-1,pointy-1,selected-1)+")"
	mes : mes : mes
	mes "Long (1-26)"
		if pointx=0:mes "(-)"
	if pointx!0:mes "("+long1(pointx-1,pointy-1,selected-1)+")"
	mes : mes : mes
	
		mes "Plus long (1-100)"
		if pointx=0:mes "(-)"
	if pointx!0:mes "("+pl(pointx-1,pointy-1,selected-1)+")"
	mes : mes : mes
	pos 5,115
	
   if PFP = 0:temt =100
   if PFP = 1:temt =100

	if (1.*fps01/4.)*1.<PTP : temt +=50
	if (1.*fps01/4.)*2.<PTP : temt +=50
	if (1.*fps01/4.)*3.<PTP : temt +=50
	red = 0
    if ptflag1!temt : ptflag = 1 :red = 1
    if ptflag = 1 : if pflag = 1 : ptime+
    
	gmode 3,,,temt
	gcopy 8,,,110,30
	pos 130,50
	gmode 2
	gcopy 7,,,scx01,10
	
	
	
	PTP +=1.*((double(Fkpa)/1000.)*(fps01*2.))/2.
	if fps01*2 * ((fps01*2.)/double((double(tempo)*2.)+1.))<PTP : PFP+ : PTP = 0.:if PFP =2:PFP=0
	
	
	;pos 150,60
	;gmode 3,,,120
	;gcopy 6,,,20,10
	cntx= -1
	cnty = -1
	secnx=0
	secny=0
	repeat 37
	cnty+
	if mousey>60+(cnty*10) : if mousey<60+(cnty*10)+10{
	
	repeat 28
	cntx++
	if mousex>150+(cntx*20) : if mousex<150+(cntx*20)+20{
	 
			pos 150+(cntx*20),60+(cnty*10)
	gmode 3,,,120
	gcopy 6,,,20,10
	secnx=(cntx+1)+stpart
	secny=cnty+1
	}
	loop
			}
	loop
	
	if pointx-stpart>0{
	pos 151+((pointx-1)*20)-(stpart*20),61+((pointy-1)*10)
	gmode 0
	if pointx!0:gcopy 12,,,19,9
	}
	
		cntx=1
	cnty=1
	repeat 39*max_stpart
	
	if cntx-stpart>0:if part1(cntx,cnty,selected-1)!0 {
	pos 150+(cntx*20)-20-(stpart*20)+2,60+(cnty*10)-10+2 : gmode 0 : gcopy 8,,,17,7 : pos 150+(cntx*20)-20-(stpart*20)+2,60+(cnty*10)-10+1 : font fon,8,0 : color 255,0,0 : mes ""+long1(cntx-1,cnty-1,selected-1)
	}
	
	cntx++
	if cntx>max_stpart:cntx=0:cnty+
	loop
	
	repeat 37
	
	if mousex>120 : if mousex<140 : if mousey>60+(cnt*10): if mousey<60+(cnt*10)+10 {
	pos 120,60+(cnt*10)
	gmode 3,,,120
	gcopy 8,,,20,10
	}
	loop

	if keyflag!0:keyflag+
	if keyflag>12:ds_stop selected-1 : keyflag = 0
	pos 210,445
	font fon,12,16
	color 255,255,255
	mes "page : "+stpart+" / "+max_stpart
		pos 325,445
	font fon,12,16
	color 255,255,255
	if pflag = 0 : mes "Player : Stop"
	if pflag = 1 : mes "Player : Play"
	if pflag = 2 : mes "Player : Pause"
	font fon,10,16
	mes 
	mes "Now, "+(ptime-1)+" second"
	pos 136+((ptime-stpart)*20),40.+cos(0.1*cnt)*5.
	font fon,10,1
	color 255,255,255
	if 120<144+((ptime-stpart)*20) : mes "��"
	if ptime+1>max_stpart : ptime = 1 : pflag = 0 {
			sed = 0
	repeat parth
	y=0
	repeat 38
	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
		}
	;BETA
	b=1
	if b=0{
	pos scx01-200,10
	color 255,255,255
	font fon,12,0
	mes "" + secnx + " : "+secny
	mes "FPS : "+ getfps
	mes max2_stpart
	mes stpart
	mes keyflag
	mes selected
	if getfps!0 : mes ((1.*fps01)/(1.*getfps))
	mes red
	mes textflag
	textflag+=red
	}
	
	pos scx01-100,0
	gmode 3,,,120
	gcopy 8,,,100,scy01
		pos scx01-92,12
	font fon,10,0
	color 100,100,100
	mes "Select Part(over:50)"
	pos scx01-94,10
	font fon,10,0
	color 255,255,255
	mes "Select Part(over:50)"
	cnts = 0
	repeat parth
	pos scx01-90,30 * (cnts+1)-partpos
	partom = 150
	if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (cnts+1)-partpos : if mousey<(30 * (cnts+1))+20-partpos : partom = 300
	gmode 3,,,partom
	if 30 * (cnts+1)-partpos>12 : gcopy 8,,,80,20
	pos scx01,-scy01-partpos
	font fon,12,0
	if 30 * (cnts+1)-partpos>12 : mes partnam(cnt)
	
	pos scx01-50-(ginfo_mesx/2),(30 * (cnts+1)-(ginfo_mesy/2)+10-partpos)+1
	font fon,12,0
	color 255,255,255
	if 30 * (cnts+1)-partpos>12 :if scy01>30 * (cnts+1)-(ginfo_mesy/2)+10-partpos: mes partnam(cnt)
	
	pos scx01-50-(ginfo_mesx/2),30 * (cnts+1)-(ginfo_mesy/2)+10-partpos
	font fon,12,0
	color 0,0,0
	if 30 * (cnts+1)-partpos>12 :if scy01>30 * (cnts+1)-(ginfo_mesy/2)+10-partpos: mes partnam(cnt)
	
	cnts +
	loop
	pos scx01-90,30 * (cnts+1)-partpos
	partom = 150
	if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (cnts+1)-partpos : if mousey<(30 * (cnts+1))+20-partpos : partom = 300
	gmode 3,,,partom
	if scy01>30 * (cnts+1)-partpos :if 30 * (cnts+1)-partpos>12 : gcopy 8,,,80,20
	pos scx01,-scy01-partpos
	font fon,12,0
	if 30 * (cnts+1)-partpos>12 : mes "Add..."
	pos scx01-50-(ginfo_mesx/2),(30 * (cnts+1)-(ginfo_mesy/2)+10-partpos)+1
	font fon,12,0
	color 255,255,255
	if 30 * (cnts+1)-partpos>12 : mes "Add..."
	
		pos scx01-50-(ginfo_mesx/2),(30 * (cnts+1)-(ginfo_mesy/2)+10-partpos)
	font fon,12,0
	color 0,0,0
	if 30 * (cnts+1)-partpos>12 : mes "Add..."
	if partcflag =1 :break
		if partpos<0:partpos = 0
		partpos1*=fas
		partpos+=partpos1
		tempo=1.*tempo
flagload = 1
			if pflag=1{

pit = 0
pas = 0
	
		repeat 39
		pit = 0
		repeat 50
		last(pas,pit) = 0
		pit+
		loop
		pas+
		loop
	
	
		
						pars = 0
			x = max_stpart-1
			y = 37
			repeat parth
			y=37
			repeat 38
			x=max_stpart-1
			repeat max_stpart
			if vol2(x,y,pars)!vol1(x,y,pars) : if last(y,pars) = 1 : vol2(x,y,pars)=vol1(x,y,pars)
			if last(y,pars) = 0 : if vol2(x,y,pars)!vol1(x,y,pars):vol2(x,y,pars)-=pl(x,y,pars) : ds_vol int(dam+(y+1)+pars),vol2(x,y,pars)*2 : last(y,pars) = 1
			
			if vol2(x,y,pars)<0 : ds_stop int(dam+(y+1)+pars) : vol2(x,y,pars) = vol1(x,y,pars) ;�r���Ŏ��̂���؂�Ă��܂��B
			x-
			loop
			y-
			loop
			pars+
			loop
		}
		
		;play
		if red=1 : if pflag=1{
			
			pars = 0
			repeat parth
			repeat 38
			if part1(ptime-1,cnt,pars)!0 {
				if lons(ptime-1,cnt,pars)=0 :lons(ptime-1,cnt,pars)=1
				if cnt = 1 :key = partbs(pars)/2
				if cnt = 2 :key =partbs(pars)/2+(partbs(pars)/48*1)
				if cnt = 3 :key =partbs(pars)/2+(partbs(pars)/36*2)
				if cnt = 4 :key =partbs(pars)/2+(partbs(pars)/38*3)
				if cnt = 5 :key =partbs(pars)/2+(partbs(pars)/32*4)
				if cnt = 6 :key =partbs(pars)/2+(partbs(pars)/30*5)
				if cnt = 7 :key =partbs(pars)/2+(partbs(pars)/28*6)
				if cnt = 8 :key =partbs(pars)/2+(partbs(pars)/28*7)
				if cnt = 9 :key =partbs(pars)/2+(partbs(pars)/28*8)
				if cnt = 10 :key =partbs(pars)/2+(partbs(pars)/27*9)
				if cnt = 11 :key =partbs(pars)/2+(partbs(pars)/27*10)
				if cnt = 12 :key =partbs(pars)/2+(partbs(pars)/25*11)
				if cnt = 13 :key =partbs(pars)
				if cnt = 14 :key =partbs(pars)+(partbs(pars)/35*1)
				if cnt = 15 :key =partbs(pars)+(partbs(pars)/18*2)
				if cnt = 16 :key =partbs(pars)+(partbs(pars)/19*3)
				if cnt = 17 :key =partbs(pars)+(partbs(pars)/16*4)
				if cnt = 18 :key =partbs(pars)+(partbs(pars)/16*5)
				if cnt = 19 :key =partbs(pars)+(partbs(pars)/15*6)
				if cnt = 20 :key =partbs(pars)+(partbs(pars)/14*7)
				if cnt = 21 :key =partbs(pars)+(partbs(pars)/14*8)
				if cnt = 22 :key =partbs(pars)+(partbs(pars)/13*9)
				if cnt = 23 :key =partbs(pars)+(partbs(pars)/13*10)
				if cnt = 24 :key =partbs(pars)+(partbs(pars)/13*11)
				if cnt = 25 :key =partbs(pars)*2
				if cnt = 26 :key =partbs(pars)*2+(partbs(pars)/26*1)
				if cnt = 27 :key =partbs(pars)*2+(partbs(pars)/10*2)
				if cnt = 28 :key =partbs(pars)*2+(partbs(pars)/9*3)
				if cnt = 29 :key =partbs(pars)*2+(partbs(pars)/8*4)
				if cnt = 30 :key =partbs(pars)*2+(partbs(pars)/8*5)
				if cnt = 31 :key =partbs(pars)*2+(partbs(pars)/8*6)
				if cnt = 32 :key =partbs(pars)*2+(partbs(pars)/7*7)
				if cnt = 33 :key =partbs(pars)*2+(partbs(pars)/7*8)
				if cnt = 34 :key =partbs(pars)*2+(partbs(pars)/6*8)
				if cnt = 35 :key =partbs(pars)*2+(partbs(pars)/7*11)
				if cnt = 36 :key =partbs(pars)*2+(partbs(pars)/6*11)
				if cnt = 37 :key =partbs(pars)*3+(partbs(pars)/5*5)
	ds_stat int(dam+cnt+pars)
    if stat = 1{
	    vol2(ptime-3,cnt,pars) = vol1(ptime-3,cnt,pars)
	    vol2(ptime-4,cnt,pars) = vol1(ptime-4,cnt,pars)
	   }
				ds_setf int(dam+cnt+pars),key
				ds_vol int(dam+cnt+pars),vol2(ptime-2,cnt-1,pars)*2

				ds_loop int(dam+cnt+pars)
				}
			loop
			pars+
			loop
			
							pars = 0
			x = 0
			y = 0
			repeat parth
			y=0
			repeat 38
			x=0
			repeat max_stpart
			if lons(x,y,pars)!0 :lons(x,y,pars) +
			if lons(x,y,pars)!0 :if long1(x-1,y-1,pars)<lons(x,y,pars)+1 : lons(x,y,pars) = 0 :vol2(x-1,y-1,pars)-=1
			
			x+
			loop
			y+
			loop
			pars+
			loop
			
			}
			;keyflag
			getkey puts,13
			if puts=1 : gosub*put
			getkey dels,16
			if dels=1 : gosub*del
	
	if gettime(7) - Fkp_bf>0 : Fkpa = gettime(7) - Fkp_bf : else :Fkpa = gettime(7) + (1000-Fkp_bf)
	Fkp_bf = gettime(7)
			
	redraw 1
	await fps02
	loop
	goto*clss
	
*left01
	stpart-=4
	if max2_stpart>0 : max2_stpart = 0
	max2_stpart-=1
	if stpart<0 : stpart=0 : max2_stpart +
		buffer 7,scx01,scy01
	color 0,0,0 :boxf
	color 255,0,0
		repeat 30,1
	pos cnt*20,0
	color 255,0,0 : font fon,8,16
	mes cnt+stpart
	loop
	gsel scid01
	return
*right01
	if sd>stpart+32 : stpart+=4 :else :return
	max2_stpart+
	if max2_stpart>0 : max_stpart+=4
		buffer 7,scx01,scy01
	color 0,0,0 :boxf
	color 255,0,0
		repeat 30,1
	pos cnt*20,0
	color 255,0,0 : font fon,8,16
	mes cnt+stpart
	loop
	gsel scid01
	return
	
*clicked
	if scr = 01{

		repeat parth
	if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (cnt+1)-partpos : if mousey<(30 * (cnt+1))+20-partpos :selected = cnt+1:partcflag =1
	loop
	if parth<50 { 
	if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (parth+1)-partpos : if mousey<(30 * (parth+1))+20-partpos :if parth<10:parth+
	if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (parth+1)-partpos : if mousey<(30 * (parth+1))+20-partpos :if parth>9 :if cflags = 0:dialog "Maybe,you'll have a error. May I make  part 11 ?",3,"Caution" {
		if stat = 6 :cflags = 1 :parth+ :return
		if stat = 7 :cflags = 0 :return
	}
if mousex>scx01-90 : if mousex<scx01-10 : if mousey>30 * (parth+1)-partpos : if mousey<(30 * (parth+1))+20-partpos :if cflags=1:parth+
}
	keynum = 0
	repeat 37
	if mousex>120 : if mousex<140 : if mousey>60+(cnt*10): if mousey<60+(cnt*10)+10 {
	if cnt = 0 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2 :keyflag = 1 : ds_play selected-1
	if cnt = 1 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/48*1) :keyflag = 1 : ds_play selected-1
	if cnt = 2 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/36*2) :keyflag = 1 : ds_play selected-1
	if cnt = 3 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/38*3) :keyflag = 1 : ds_play selected-1
	if cnt = 4 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/32*4) :keyflag = 1 : ds_play selected-1
	if cnt = 5 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/30*5) :keyflag = 1 : ds_play selected-1
	if cnt = 6 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/28*6) :keyflag = 1 : ds_play selected-1
	if cnt = 7 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/28*7) :keyflag = 1 : ds_play selected-1
	if cnt = 8 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/28*8) :keyflag = 1 : ds_play selected-1
	if cnt = 9 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/27*9) :keyflag = 1 : ds_play selected-1
	if cnt = 10 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/27*10) :keyflag = 1 : ds_play selected-1
	if cnt = 11 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)/2+(partbs(selected-1)/25*11) :keyflag = 1 : ds_play selected-1
	if cnt = 12 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1) :keyflag = 1 : ds_play selected-1
	if cnt = 13 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/35*1) :keyflag = 1 : ds_play selected-1
	if cnt = 14 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/18*2) :keyflag = 1 : ds_play selected-1
	if cnt = 15 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/19*3) :keyflag = 1 : ds_play selected-1
	if cnt = 16 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/16*4) :keyflag = 1 : ds_play selected-1
	if cnt = 17 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/16*5) :keyflag = 1 : ds_play selected-1
	if cnt = 18 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/15*6) :keyflag = 1 : ds_play selected-1
	if cnt = 19 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/14*7) :keyflag = 1 : ds_play selected-1
	if cnt = 20 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/14*8) :keyflag = 1 : ds_play selected-1
	if cnt = 21 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/13*9) :keyflag = 1 : ds_play selected-1
	if cnt = 22 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/13*10) :keyflag = 1 : ds_play selected-1
	if cnt = 23 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)+(partbs(selected-1)/13*11) :keyflag = 1 : ds_play selected-1
	if cnt = 24 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2 :keyflag = 1 : ds_play selected-1
	
	
	if cnt = 25 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/26*1) :keyflag = 1 : ds_play selected-1
	if cnt = 26 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/10*2) :keyflag = 1 : ds_play selected-1 ;��肩��
	if cnt = 27 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/9*3) :keyflag = 1 : ds_play selected-1
	if cnt = 28 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/8*4) :keyflag = 1 : ds_play selected-1
	if cnt = 29 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/8*5) :keyflag = 1 : ds_play selected-1
	if cnt = 30 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/8*6) :keyflag = 1 : ds_play selected-1
	if cnt = 31 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/7*7) :keyflag = 1 : ds_play selected-1
	if cnt = 32 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/7*8) :keyflag = 1 : ds_play selected-1
	if cnt = 33 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/6*8) :keyflag = 1 : ds_play selected-1
	if cnt = 34 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/7*11) :keyflag = 1 : ds_play selected-1
	if cnt = 35 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*2+(partbs(selected-1)/6*11) :keyflag = 1 : ds_play selected-1
	if cnt = 36 : ds_stat p1: if stat!1 : ds_getf (selected-1): ds_setf (selected-1),partbs(selected-1)*3+(partbs(selected-1)/5*5) :keyflag = 1 : ds_play selected-1
	} 
	loop
	
		
			cntx= -1
	cnty = -1
	secnx=0
	secny=0
	repeat 37
	cnty+
	if mousey>60+(cnty*10) : if mousey<60+(cnty*10)+10{
	
	repeat 28
	cntx++
	if mousex>150+(cntx*20) : if mousex<150+(cntx*20)+20{
	secnx=(cntx+1)+stpart
	secny=cnty+1
	}
	loop
			}
	loop
	pointx = 0
	if secnx>0:pointx = secnx
	if secny>0:pointy = secny
	
	
	if pointx!0 : if nlong = 0{
	if long1(pointx-1,pointy-1,selected-1)=0 : long1(pointx-1,pointy-1,selected-1) = 1
	if pl(pointx-1,pointy-1,selected-1)=0 : pl(pointx-1,pointy-1,selected-1) = 10
	if vol1(pointx-1,pointy-1,selected-1)=0 : vol1(pointx-1,pointy-1,selected-1)=100
		nvol = vol1(pointx-1,pointy-1,selected-1)
	nviv = viv1(pointx-1,pointy-1,selected-1)
	nlong = long1(pointx-1,pointy-1,selected-1)
	npl = pl(pointx-1,pointy-1,selected-1)
	}

	if pointx!0 : if nlong!0{
		vol1(pointx-1,pointy-1,selected-1) =nvol
		viv1(pointx-1,pointy-1,selected-1) =nviv
		long1(pointx-1,pointy-1,selected-1) =nlong
		pl(pointx-1,pointy-1,selected-1) =npl
		
		
	}
	
		}
		return



*files
	
	dialog "wav",16,"<.wav> only" : strt =stat 
	if strt = -1:return
	if getpath(refstr,2)=".wav":file(selected-1) = refstr : ds_load file(selected-1),(selected-1):ds_getf selected-1 :partbs(selected-1)=stat:return
	if strt = 0 :return
	dialog "This soft wear only use <.wav>."
	return
	
*down
	partpos1-=10.

	return
*up
	partpos1+=10.
	return
*put
	if pointx=0:return
	part1(pointx,pointy,selected-1) =1
	return
*del
		if pointx=0:return
	part1(pointx,pointy,selected-1) =0
	return
	
*vivright
	if pointx=0:return
	viv1(pointx-1,pointy-1,selected-1)+=10
	if viv1(pointx-1,pointy-1,selected-1)>100:viv1(pointx-1,pointy-1,selected-1)=100
	nviv = viv1(pointx-1,pointy-1,selected-1)
	return
*vivleft
		if pointx=0:return
	viv1(pointx-1,pointy-1,selected-1)-=10
	if viv1(pointx-1,pointy-1,selected-1)<0:viv1(pointx-1,pointy-1,selected-1)=0
	nviv = viv1(pointx-1,pointy-1,selected-1)
	return
*volright
		if pointx=0:return
			vol1(pointx-1,pointy-1,selected-1)+=10
			if vol1(pointx-1,pointy-1,selected-1)>200:vol1(pointx-1,pointy-1,selected-1)=200
			nvol = vol1(pointx-1,pointy-1,selected-1)
			return
*volleft
		if pointx=0:return
			vol1(pointx-1,pointy-1,selected-1)-=10
			if vol1(pointx-1,pointy-1,selected-1)<10:vol1(pointx-1,pointy-1,selected-1)=10
			 nvol = vol1(pointx-1,pointy-1,selected-1)
			return
*longright
		if pointx=0:return
			long1(pointx-1,pointy-1,selected-1)+=1
			if long1(pointx-1,pointy-1,selected-1)>26:long1(pointx-1,pointy-1,selected-1)=26
			nlong = long1(pointx-1,pointy-1,selected-1)
			return
*longleft
		if pointx=0:return
			long1(pointx-1,pointy-1,selected-1)-=1
			if long1(pointx-1,pointy-1,selected-1)<1:long1(pointx-1,pointy-1,selected-1)=1
			nlong = long1(pointx-1,pointy-1,selected-1)
			return
*plleft
			if pointx=0:return
			pl(pointx-1,pointy-1,selected-1)-=1
			if pl(pointx-1,pointy-1,selected-1)<1:pl(pointx-1,pointy-1,selected-1)=1
			npl = pl(pointx-1,pointy-1,selected-1)
			return
*plright
			if pointx=0:return
			pl(pointx-1,pointy-1,selected-1)+=1
			if pl(pointx-1,pointy-1,selected-1)>100:pl(pointx-1,pointy-1,selected-1)=100
			npl = pl(pointx-1,pointy-1,selected-1)
			return
	
*play
	if pflag = 1 :ptime = 1
	pflag = 1
	sed = 0
	repeat parth
	y=0
	repeat 38

	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
						pars = 0
			x = 0
			y = 0
			repeat parth
			y=0
			repeat 38
			x=0
			repeat max_stpart
			vol2(x,y,pars) = vol1(x,y,pars)
			x+
			loop
			y+
			loop
			pars+
			loop
	return
*stops
	pflag = 0
	ptime = 1
sed = 0
	repeat parth
	y=0
	repeat 38
	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
	return
*pause
	pflag = 2
	sed = 0
	repeat parth
	y=0
	repeat 38
	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
	return
*load
		pflag = 0
	ptime = 1
sed = 0
	repeat parth
	y=0
	repeat 38
	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
	dialog "ptm",16,"Music File" :sfile =refstr 
	if getpath(sfile,2)="" : sfile+=".ptm"
	if stat = 0 :return
	dialog "May I load save data ? current data will be gone now",2,"Question"
	if stat = 7 :return
	
		redraw 0
    pos scx01/2+4,scy01/2+4
	gmode 3,,,130
	grotate 13,,,,scx01-400,scy01-400
	pos scx01/2,scy01/2
	gmode 3,,,180
	grotate 14,,,,scx01-400,scy01-400
	pos scx01/2,-scy01
	font fon,15,1
	color 255,255,255
	mes "Loading Music File..."
	pos scx01/2-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)
	font fon,15,1
	color 255,255,255
	mes "Loading Music File..."
	redraw 1
	vload str(sfile)
	repeat parth
	if file(cnt)!"" : ds_load file(cnt),(cnt) : ds_getf cnt : partbs(cnt)=stat
	loop
	redraw 0
		clrobj
			pos 210,470
	objsize 20,12
	button gosub "��",*left01
	pos 270,470
	objsize 20,12
	button gosub "��",*right01
	pos 10,50
	objsize 100,25
	button gosub"file",*files
	pos 10,120
	input tempo,100,20
		pos scx01-80,scy01-30
	objsize 15,15
	button gosub"��",*up
	pos scx01-30,scy01-30
	objsize 15,15
	button gosub"��",*down
	
		pos 8,scy01-60
	objsize 60,20
	button gosub"put(enter)",*put
		pos 46,scy01-30
	objsize 60,20
	button gosub"del(shift)",*del
	
		pos 12,225
	objsize 40,20
	button gosub"-",*vivleft
		pos 62,225
	objsize 40,20
	button gosub"+",*vivright
			pos 12,275
	objsize 40,20
	button gosub"-",*volleft
		pos 62,275
	objsize 40,20
	button gosub"+",*volright
			pos 12,325
	objsize 40,20
	button gosub"-",*longleft
		pos 62,325
	objsize 40,20
	button gosub"+",*longright
	
				pos 12,375
	objsize 40,20
	button gosub"-",*plleft
		pos 62,375
	objsize 40,20
	button gosub"+",*plright
	
	pos 410,450
	objsize 40,30
	button gosub"play",*play
	pos 460,450
	objsize 40,30
	button gosub"stop",*stops
	pos 510,450
	objsize 40,30
	button gosub"pause",*pause
	
	pos 595,438
	objsize 60,15
	button gosub "new",*new1
	pos 610,455
	objsize 60,15
	button gosub "load",*load
	pos 625,472
	objsize 60,15
	button gosub "save",*save
	pos 220,7
	input partnam(selected-1),80,16
	redraw 1
	dialog "loaded."
		making = getpath(sfile,8+1)
	title ""+system_name+" "+version+" -"+making+"-"
	return
*save
		pflag = 0
	ptime = 1
sed = 0
	repeat parth
	y=0
	repeat 38
	ds_dup int(dam+y+sed),sed
	y+
	loop
	sed+
	loop
	dialog "May I make save data?",3,"Warning"
	if stat = 7 :return
	dialog "ptm",17,"Music File" :sfile =refstr 
	if getpath(sfile,2)="" : sfile+=".ptm"
	if stat = 0 :return
			redraw 0
    pos scx01/2+4,scy01/2+4
	gmode 3,,,130
	grotate 13,,,,scx01-400,scy01-400
	pos scx01/2,scy01/2
	gmode 3,,,180
	grotate 14,,,,scx01-400,scy01-400
	pos scx01/2,-scy01
	font fon,15,1
	color 255,255,255
	mes "Saving Music File..."
	pos scx01/2-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)
	font fon,15,1
	color 255,255,255
	mes "Saving Music File..."
	redraw 1
	vsave str(sfile)

	dialog "Saved."
			making = getpath(sfile,8+1)
	title ""+system_name+" "+version+" -"+making+"-"
	return
*news
	sd2 = 500
	clrobj
	redraw 0
	color 0,0,50 : boxf
		
	pos scx01/2,-scy01/2
	font fon,12,1
	mes "How long songs do you wanna make ? (50-2000)"
	
	pos scx01/2-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)-50
	font fon,12,1
	color 255,255,255
	mes "How long songs do you wanna make? (50-2000)"
	pos scx01/2-50,scy01/2-30
	input sd2,100,20
	pos scx01/2-50-80,scy01/2+5
	objsize 100,20
	button gosub"New",*check
	pos scx01/2-50+80,scy01/2+5
	objsize 100,20
	button goto"Exit",*bye
	redraw 1
	stop
*new1
	clrobj
	redraw 0
	color 0,0,50 : boxf
	
	pos scx01/2,-scy01/2
	font fon,12,1
	mes "How long songs do you wanna make ? (50-2000)"
	
	pos scx01/2-(ginfo_mesx/2),scy01/2-(ginfo_mesy/2)-50
	font fon,12,1
	color 255,255,255
	mes "How long songs do you wanna make ? (50-2000)"
	pos scx01/2-50,scy01/2-30
	input sd2,100,20
	pos scx01/2-50-80,scy01/2+5
	objsize 100,20
	button gosub"New",*check
	pos scx01/2-50+80,scy01/2+5
	objsize 100,20
	button goto"Back",*clss
	redraw 1
	stop
	
*error
	dialog "System error."
	end
*bye
	end
*check
	if sd2<50 :dialog "up on 50." : return
	if sd2>2000:dialog "down under 2000."
	goto*clss2